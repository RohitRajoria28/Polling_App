fa7014c7eb7fad7be374d2f693d21c6f
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _react = _interopRequireDefault(require("react"));
var _reactNative = require("@testing-library/react-native");
var _DetailsScreen = _interopRequireDefault(require("../DetailsScreen"));
var _jsxRuntime = require("react/jsx-runtime");
test('DetailsScreen renders without crashing', function () {
  var mockRoute = {
    params: {
      json: {
        objectID: '1',
        title: 'Test',
        url: 'http://example.com',
        created_at: '2023-03-21T12:00:00.000Z',
        author: 'Test Author'
      }
    }
  };
  (0, _reactNative.render)((0, _jsxRuntime.jsx)(_DetailsScreen.default, {
    route: mockRoute
  }));
});
test('DetailsScreen displays the correct JSON data', function () {
  var mockRoute = {
    params: {
      json: {
        objectID: '1',
        title: 'Test',
        url: 'http://example.com',
        created_at: '2023-03-21T12:00:00.000Z',
        author: 'Test Author'
      }
    }
  };
  var _render = (0, _reactNative.render)((0, _jsxRuntime.jsx)(_DetailsScreen.default, {
      route: mockRoute
    })),
    getByText = _render.getByText;
  expect(getByText(/Test/)).toBeTruthy();
  expect(getByText(/http:\/\/example\.com/)).toBeTruthy();
  expect(getByText(/2023-03-21T12:00:00\.000Z/)).toBeTruthy();
  expect(getByText(/Test Author/)).toBeTruthy();
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfcmVhY3QiLCJfaW50ZXJvcFJlcXVpcmVEZWZhdWx0IiwicmVxdWlyZSIsIl9yZWFjdE5hdGl2ZSIsIl9EZXRhaWxzU2NyZWVuIiwiX2pzeFJ1bnRpbWUiLCJ0ZXN0IiwibW9ja1JvdXRlIiwicGFyYW1zIiwianNvbiIsIm9iamVjdElEIiwidGl0bGUiLCJ1cmwiLCJjcmVhdGVkX2F0IiwiYXV0aG9yIiwicmVuZGVyIiwianN4IiwiZGVmYXVsdCIsInJvdXRlIiwiX3JlbmRlciIsImdldEJ5VGV4dCIsImV4cGVjdCIsInRvQmVUcnV0aHkiXSwic291cmNlcyI6WyJEZXRhaWxzU2NyZWVuLnRlc3QudHN4Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XHJcbmltcG9ydCB7IHJlbmRlciB9IGZyb20gJ0B0ZXN0aW5nLWxpYnJhcnkvcmVhY3QtbmF0aXZlJztcclxuaW1wb3J0IERldGFpbHNTY3JlZW4gZnJvbSAnLi4vRGV0YWlsc1NjcmVlbic7XHJcblxyXG50ZXN0KCdEZXRhaWxzU2NyZWVuIHJlbmRlcnMgd2l0aG91dCBjcmFzaGluZycsICgpID0+IHtcclxuICBjb25zdCBtb2NrUm91dGUgPSB7XHJcbiAgICBwYXJhbXM6IHtcclxuICAgICAganNvbjogeyBvYmplY3RJRDogJzEnLCB0aXRsZTogJ1Rlc3QnLCB1cmw6ICdodHRwOi8vZXhhbXBsZS5jb20nLCBjcmVhdGVkX2F0OiAnMjAyMy0wMy0yMVQxMjowMDowMC4wMDBaJywgYXV0aG9yOiAnVGVzdCBBdXRob3InIH1cclxuICAgIH1cclxuICB9O1xyXG4gIHJlbmRlcig8RGV0YWlsc1NjcmVlbiByb3V0ZT17bW9ja1JvdXRlfSAvPik7XHJcbn0pO1xyXG5cclxudGVzdCgnRGV0YWlsc1NjcmVlbiBkaXNwbGF5cyB0aGUgY29ycmVjdCBKU09OIGRhdGEnLCAoKSA9PiB7XHJcbiAgICBjb25zdCBtb2NrUm91dGUgPSB7XHJcbiAgICAgIHBhcmFtczoge1xyXG4gICAgICAgIGpzb246IHsgb2JqZWN0SUQ6ICcxJywgdGl0bGU6ICdUZXN0JywgdXJsOiAnaHR0cDovL2V4YW1wbGUuY29tJywgY3JlYXRlZF9hdDogJzIwMjMtMDMtMjFUMTI6MDA6MDAuMDAwWicsIGF1dGhvcjogJ1Rlc3QgQXV0aG9yJyB9XHJcbiAgICAgIH1cclxuICAgIH07XHJcbiAgICBjb25zdCB7IGdldEJ5VGV4dCB9ID0gcmVuZGVyKDxEZXRhaWxzU2NyZWVuIHJvdXRlPXttb2NrUm91dGV9IC8+KTtcclxuICAgIGV4cGVjdChnZXRCeVRleHQoL1Rlc3QvKSkudG9CZVRydXRoeSgpO1xyXG4gICAgZXhwZWN0KGdldEJ5VGV4dCgvaHR0cDpcXC9cXC9leGFtcGxlXFwuY29tLykpLnRvQmVUcnV0aHkoKTtcclxuICAgIGV4cGVjdChnZXRCeVRleHQoLzIwMjMtMDMtMjFUMTI6MDA6MDBcXC4wMDBaLykpLnRvQmVUcnV0aHkoKTtcclxuICAgIGV4cGVjdChnZXRCeVRleHQoL1Rlc3QgQXV0aG9yLykpLnRvQmVUcnV0aHkoKTtcclxufSk7XHJcblxyXG4gIl0sIm1hcHBpbmdzIjoiO0FBQUEsSUFBQUEsTUFBQSxHQUFBQyxzQkFBQSxDQUFBQyxPQUFBO0FBQ0EsSUFBQUMsWUFBQSxHQUFBRCxPQUFBO0FBQ0EsSUFBQUUsY0FBQSxHQUFBSCxzQkFBQSxDQUFBQyxPQUFBO0FBQTZDLElBQUFHLFdBQUEsR0FBQUgsT0FBQTtBQUU3Q0ksSUFBSSxDQUFDLHdDQUF3QyxFQUFFLFlBQU07RUFDbkQsSUFBTUMsU0FBUyxHQUFHO0lBQ2hCQyxNQUFNLEVBQUU7TUFDTkMsSUFBSSxFQUFFO1FBQUVDLFFBQVEsRUFBRSxHQUFHO1FBQUVDLEtBQUssRUFBRSxNQUFNO1FBQUVDLEdBQUcsRUFBRSxvQkFBb0I7UUFBRUMsVUFBVSxFQUFFLDBCQUEwQjtRQUFFQyxNQUFNLEVBQUU7TUFBYztJQUNqSTtFQUNGLENBQUM7RUFDRCxJQUFBQyxtQkFBTSxFQUFDLElBQUFWLFdBQUEsQ0FBQVcsR0FBQSxFQUFDWixjQUFBLENBQUFhLE9BQWE7SUFBQ0MsS0FBSyxFQUFFWDtFQUFVLEVBQUcsQ0FBQztBQUM3QyxDQUFDLENBQUM7QUFFRkQsSUFBSSxDQUFDLDhDQUE4QyxFQUFFLFlBQU07RUFDdkQsSUFBTUMsU0FBUyxHQUFHO0lBQ2hCQyxNQUFNLEVBQUU7TUFDTkMsSUFBSSxFQUFFO1FBQUVDLFFBQVEsRUFBRSxHQUFHO1FBQUVDLEtBQUssRUFBRSxNQUFNO1FBQUVDLEdBQUcsRUFBRSxvQkFBb0I7UUFBRUMsVUFBVSxFQUFFLDBCQUEwQjtRQUFFQyxNQUFNLEVBQUU7TUFBYztJQUNqSTtFQUNGLENBQUM7RUFDRCxJQUFBSyxPQUFBLEdBQXNCLElBQUFKLG1CQUFNLEVBQUMsSUFBQVYsV0FBQSxDQUFBVyxHQUFBLEVBQUNaLGNBQUEsQ0FBQWEsT0FBYTtNQUFDQyxLQUFLLEVBQUVYO0lBQVUsRUFBRyxDQUFDO0lBQXpEYSxTQUFTLEdBQUFELE9BQUEsQ0FBVEMsU0FBUztFQUNqQkMsTUFBTSxDQUFDRCxTQUFTLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQ0UsVUFBVSxFQUFFO0VBQ3RDRCxNQUFNLENBQUNELFNBQVMsQ0FBQyx1QkFBdUIsQ0FBQyxDQUFDLENBQUNFLFVBQVUsRUFBRTtFQUN2REQsTUFBTSxDQUFDRCxTQUFTLENBQUMsMkJBQTJCLENBQUMsQ0FBQyxDQUFDRSxVQUFVLEVBQUU7RUFDM0RELE1BQU0sQ0FBQ0QsU0FBUyxDQUFDLGFBQWEsQ0FBQyxDQUFDLENBQUNFLFVBQVUsRUFBRTtBQUNqRCxDQUFDLENBQUMifQ==